@include "resources/shaders/common/header.glsl"

///////////////////////////////////////////////////////////////////////////////
// input
///////////////////////////////////////////////////////////////////////////////
in VertexData {
  vec2 pass_uv_coords;
  float pass_log_depth;
  float pass_es_linear_depth;
} VertexIn;

///////////////////////////////////////////////////////////////////////////////
// output
///////////////////////////////////////////////////////////////////////////////

// No output other than depth texture
layout (location = 0) out float out_logarithmic_depth;

///////////////////////////////////////////////////////////////////////////////
// uniforms
///////////////////////////////////////////////////////////////////////////////
uniform float near_plane;
uniform float far_minus_near_plane;
uniform float radius_model_scaling;
uniform float far_plane;


uniform float top_minus_bottom;
uniform float right_minus_left;
uniform float render_target_width;
uniform float render_target_height;

///////////////////////////////////////////////////////////////////////////////
// splatting methods
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// main
///////////////////////////////////////////////////////////////////////////////
void main() {

  vec2 uv_coords = VertexIn.pass_uv_coords;

  if( (uv_coords.x * uv_coords.x + uv_coords.y * uv_coords.y) > 1)
    discard;

  out_logarithmic_depth = VertexIn.pass_log_depth;

  gl_FragDepth = -VertexIn.pass_es_linear_depth/far_plane;
}

